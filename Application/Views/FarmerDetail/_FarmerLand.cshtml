
@model BusinessEntities.EntityClasses.FarmerLandMappingEntities
@using BusinessEntities.EntityClasses
@using BusinessEntities.Enums
@using Application.Common;
@{
    //List<SelectListItem> landTypeLisst = CommonOperations.BindDropdwon<FarmerLandTypeEntities>(Model.landTypeList, "Id", "LandType");
    //List<SelectListItem> OwnershipTypeList = CommonOperations.BindDropdwon<LandOwnershipTypeEntities>(Model.ownershipType, "Id", "OwnershipType");

    List<SelectListItem> landTypeLisst = CommonOperations.GetLandType();
    List<SelectListItem> OwnershipTypeList = CommonOperations.GetOwnershipType();

    bool IsDisableMode = ViewBag.isInDisableMode;
}
<tr class="rowSpacing"></tr>
<tr class="trLandMapping">
    <td>
        <table>
            <tr>
                <td class="hideForId">
                    <input type="text" id="txtEduId" value="@Model.Id" />
                </td>
                <td class="tdWidth">
                    Land Type <span class="text-danger">*</span> :
                </td>
                <td class="tdWidth">

                    @Html.DropDownListFor(model => model.LandTypeId, landTypeLisst, ConfigSettings.DefaultDropDownText, IsDisableMode == false ? new { @class = "form-control", @id = "ddlLandType" } : (object)new { @class = "form-control", @id = "ddlLandType", @disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.LandTypeId, "", new { @class = "text-danger" })
                </td>
                <td class="tdrowSpacing"></td>
                <td class="tdWidth">
                    OwnerShip <span class="text-danger">*</span> :
                </td>
                <td class="tdWidth">

                    @Html.DropDownListFor(model => model.OwnershipTypeId, OwnershipTypeList, ConfigSettings.DefaultDropDownText, IsDisableMode == false ? new { @class = "form-control", @id = "ddlOwnerShip" } : (object)new { @class = "form-control", @id = "ddlOwnerShip", @disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.OwnershipTypeId, "", new { @class = "text-danger" })
                </td>

                <td class="tdrowSpacing"></td>
                <td class="tdWidth">
                    Acre <span class="text-danger">*</span> :
                </td>
                <td class="tdWidth">

                    @Html.TextBoxFor(model => model.Acre, IsDisableMode == false ? new { @class = "form-control", @type = "number" } : (object)new { @class = "form-control", @type = "number", @disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.Acre, "", new { @class = "text-danger" })
                </td>
            </tr>
        </table>
    </td>
</tr>