
@model BusinessEntities.EntityClasses.FarmerCropMappingEntities
@using BusinessEntities.EntityClasses
@using BusinessEntities.Enums
@using Application.Common;
@{
    List<SelectListItem> cropList = CommonOperations.BindDropdwon<CropInfoEntities>(Model.cropList, "CropID", "CropName");
    List<SelectListItem> YearList = CommonOperations.GetDropdownValueForExperienceYears();
    bool IsDisableMode = ViewBag.isInDisableMode;
}
<tr class="rowSpacing"></tr>
<tr class="trCropMapping">
    <td>
        <table>
            <tr>
                <td class="hideForId">
                    <input type="text" id="txtEduId" value="@Model.id" />
                </td>
                <td class="tdWidth">
                    Crop <span class="text-danger">*</span> :
                </td>
                <td class="tdWidth">

                    @Html.DropDownListFor(model => model.cropId, cropList, ConfigSettings.DefaultDropDownText, IsDisableMode == false ? new { @class = "form-control", @id = "ddlCrops" } : (object)new { @class = "form-control", @id = "ddlCrops", @disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.cropId, "", new { @class = "text-danger" })
                </td>
                <td class="tdrowSpacing"></td>
                <td class="tdWidth">
                    Year <span class="text-danger">*</span> :
                </td>
                <td class="tdWidth">

                    @Html.DropDownListFor(model => model.cropYear, YearList, ConfigSettings.DefaultDropDownText, IsDisableMode == false ? new { @class = "form-control", @id = "ddlYear" } : (object)new { @class = "form-control", @id = "ddlYear", @disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.cropYear, "", new { @class = "text-danger" })
                </td>

                <td class="tdrowSpacing"></td>
                <td class="tdWidth">
                    Acre <span class="text-danger">*</span> :
                </td>
                <td class="tdWidth">

                    @Html.TextBoxFor(model => model.acre, IsDisableMode == false ? new { @class = "form-control", @type = "number" } : (object)new { @class = "form-control", @type = "number", @disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.acre, "", new { @class = "text-danger" })
                </td>
            </tr>
        </table>
    </td>
</tr>